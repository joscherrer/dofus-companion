n

import (
	"fmt"
	"image/color"
	"log"
	"os"

	// "strings"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/theme"

	// "fyne.io/fyne/v2/canvas"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/driver/desktop"
	"fyne.io/fyne/v2/layout"
	"fyne.io/fyne/v2/widget"

)

func RefreshGameClients(l *fyne.Container) {
	wins, _ := ListWindows()
	widgets := make([]fyne.CanvasObject, 0)
	for _, win := range wins {
		text, _ := win.GetWindowText()

		if !strings.Contains(text, "Dofus") {
			continue
		}

		c := GameClient{w: &win}
		name, err := c.GetCharacterName()
		if err != nil {
			continue
		}

		moveUpBtn := widget.NewButtonWithIcon("", theme.MoveUpIcon(), func() { fmt.Println("Move up") })
		moveDownBtn := widget.NewButtonWithIcon("", theme.MoveDownIcon(), func() { fmt.Println("Move down") })
		moveGroup := container.New(layout.NewHBoxLayout(), moveUpBtn, moveDownBtn)

		settingsBtn := widget.NewButtonWithIcon("", theme.SettingsIcon(), func() {})
		clientBtn := widget.NewButtonWithIcon(fmt.Sprintf("  %s", name), resourceUnknownPng, func() { fmt.Println("ok") })
		row := container.NewBorder(nil, nil, moveGroup, settingsBtn, clientBtn)

		// wg := widget.NewButtonWithIcon(name, resourceUnknownPng, func() { fmt.Println("ok") })
		// wg.Alignment = widget.ButtonAlignLeading
		widgets = append(widgets, row)
	}
	l.Objects = widgets
}

func main() {
	a := app.New()
	a.SetIcon(resourceDofusIcon128Png)
	a.Settings().SetTheme(&DofusCompanionTheme{})

	w := a.NewWindow("Dofus Companion")

	if desk, ok := a.(desktop.App); ok {
		m := fyne.NewMenu("Dofus Companion",
			fyne.NewMenuItem("Show", func() {
				w.Show()
				log.Println("Tapped show")
			}))

		desk.SetSystemTrayMenu(m)
	}
	w.Resize(fyne.NewSize(350, 500))

	clientsLayout := container.New(layout.NewVBoxLayout())
	refreshBtn := widget.NewButtonWithIcon("", theme.MediaReplayIcon(), func() { RefreshGameClients(clientsLayout) })
	prevBtn := widget.NewButtonWithIcon("", theme.MoveUpIcon(), func() { fmt.Println("Previous") })
	nextBtn := widget.NewButtonWithIcon("", theme.MoveDownIcon(), func() { fmt.Println("Next") })
	menuLayout := container.New(layout.NewAdaptiveGridLayout(3), prevBtn, nextBtn, refreshBtn)
	root := container.New(layout.NewVBoxLayout(), menuLayout, widget.NewSeparator(), widget.NewSeparator(), clientsLayout)

	RefreshGameClients(clientsLayout)

	w.SetContent(root)
	w.SetCloseIntercept(func() {
		w.Hide()
	})

	w.ShowAndRun()
}

